name: Android Pull Request Flow

on:
  pull_request:
    branches:
      - develop
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  projectJob:
    runs-on: self-hosted
    name: "CI Pipeline"
    if: github.event.pull_request.draft == false

    steps:
      - name: Add to github path
        run: |
          echo "/usr/local/bin" >> $GITHUB_PATH
          echo "$PWD" >> $GITHUB_PATH
          echo "$PWD/.sh" >> $GITHUB_PATH

      - name: Add JAVA_HOME globally
        run: |
          echo "JAVA_HOME=$(/usr/libexec/java_home -v 17)" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: 'true'
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.4.2
        env:
          CI: true
        with:
          gradle-version: "wrapper"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.GITHUBRUNNER_EC2_ACTIONS_ROLE_ARN }}
          role-duration-seconds: 1200
          role-skip-session-tagging: true

      - name: Store ENV from AWS SecretManager
        id: secrets
        uses: say8425/aws-secrets-manager-actions@v2
        with:
          AWS_DEFAULT_REGION: "eu-west-2"
          SECRET_NAME: "di-ipv-dca-mob-android/github-actions-env"

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ env.KEYSTORE_BASE64 }}
        run: |
          echo "${ENCODED_STRING}" | base64 --decode > config/keystore.jks

      - name: Decode Service Account
        env:
          ENCODED_STRING: ${{ env.SERVICE_ACCOUNT_JSON_BASE64 }}
        run: |
          echo "${ENCODED_STRING}" | base64 --decode > config/service-account.json

      - name: Code Linting
        id: codeLinting
        run: ./gradlew dependencyCheckAnalyze detekt ktlintCheck lintStagingDebug lintDebug shellcheck --stacktrace
        env:
          CI: true
          SIGNING_KEY_ALIAS: ${{ env.KEYSTORE_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ env.KEYSTORE_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ env.KEYSTORE_PASSWORD }}
          READID_API_KEY: ${{ env.READID_API_KEY }}

      - name: Unit tests
        id: gradleBuild
        run: |
          ./gradlew \
            testBuildDebugUnitTest \
            testBuildReleaseUnitTest \
            testDebugUnitTest \
            verifyPaparazziDebug \
            --stacktrace
        env:
          CI: true
          SIGNING_KEY_ALIAS: ${{ env.KEYSTORE_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ env.KEYSTORE_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ env.KEYSTORE_PASSWORD }}
          READID_API_KEY: ${{ env.READID_API_KEY }}

      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: playstore
          arch: x86
          profile: pixel_4_xl
          script: |
            ./gradlew connectedBuildDebugAndroidTest connectedDebugAndroidTest combinedBuildDebugJacocoTestReport combinedDebugJacocoTestReport pullBuildDebugScreenshotsFromDevice --continue --stacktrace

      - name: Run Sonarqube PR Analysis
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          ./gradlew sonarqube \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.pullrequest.key=${{ github.event.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref || github.ref_name }} \
            -Dsonar.pullrequest.base=develop
        env:
          CI: true

      - name: Run Sonarqube Branch Analysis
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          ./gradlew sonarqube \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.branch.name=${{ github.head_ref || github.ref_name }}
        env:
          CI: true

      - name: Bundle build reports
        if: always()
        run: |
          zip -9 -r --exclude=**/build/reports/screenshots reports.zip **/build/reports

      - name: Upload build reports
        id: uploadBuildReports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: build-reports
          retention-days: 14
          path: |
            reports.zip

      - name: Bundle screenshots
        if: always()
        run: |
          zip -9 -r screenshots.zip **/build/reports/screenshots

      - name: Upload screenshots
        id: uploadScreenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: app-screenshots
          retention-days: 14
          path: |
            screenshots.zip

      - name: Reset and stop AVD
        if: always()
        run: |
          stopAllEmulators.sh

      - name: Clean repository
        id: cleanRepository
        if: always()
        run: |
          rm config/keystore.jks
          rm config/service-account.json
